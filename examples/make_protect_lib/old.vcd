$version Generated by VerilatedVcd $end
$date Wed Dec 16 09:41:59 2020
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 . clk $end
  $scope module top $end
   $var wire 32 ) a [31:0] $end
   $var wire 32 * b [31:0] $end
   $var wire  1 . clk $end
   $var wire 32 / cyc [31:0] $end
   $var wire 32 0 x [31:0] $end
   $scope module secret $end
    $var wire 32 ) a [31:0] $end
    $var wire 32 * b [31:0] $end
    $var wire  1 . clk $end
    $var wire 64 # handle__V [63:0] $end
    $var wire 64 , last_combo_seqnum__V [63:0] $end
    $var wire 64 ' last_seq_seqnum__V [63:0] $end
    $var wire 32 1 protectlib_hash__V [31:0] $end
    $var wire 32 0 x [31:0] $end
    $var wire 32 + x_combo__V [31:0] $end
    $var wire 32 % x_seq__V [31:0] $end
    $var wire 32 & x_tmp__V [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b0000000000000000011111111111111111100110000110111000101000000000 #
b10111011110101011000111010111100 %
b11001010101001001001111010110110 &
b1100010010011100001100111101111101111101011011111111001110110111 '
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b01100010111110011010101101010110 +
b0000000000000000000000000000000000000000000000000000000000000000 ,
1.
b00000000000000000000000000000000 /
b10111011110101011000111010111100 0
b01001010000101011001000011011000 1
#2
b01100010111110011010101101010110 %
b01100010111110011010101101010110 &
b0000000000000000000000000000000000000000000000000000000000000001 '
0.
b01100010111110011010101101010110 0
#3
b00000000000000000000000000001001 %
b00000000000000000000000000001001 &
b0000000000000000000000000000000000000000000000000000000000000010 '
b00000000000000000000000000000101 )
b00000000000000000000000000000111 *
b00000000000000000000000000001001 +
b0000000000000000000000000000000000000000000000000000000000000011 ,
1.
b00000000000000000000000000000001 /
b00000000000000000000000000001001 0
#4
b0000000000000000000000000000000000000000000000000000000000000100 '
0.
#5
b00000000000000000000000000010101 %
b00000000000000000000000000010101 &
b0000000000000000000000000000000000000000000000000000000000000101 '
b00000000000000000000000000000110 )
b00000000000000000000000000000010 *
b00000000000000000000000000010101 +
b0000000000000000000000000000000000000000000000000000000000000110 ,
1.
b00000000000000000000000000000010 /
b00000000000000000000000000010101 0
#6
b0000000000000000000000000000000000000000000000000000000000000111 '
0.
#7
b00000000000000000000000000010001 %
b00000000000000000000000000010001 &
b0000000000000000000000000000000000000000000000000000000000001000 '
b00000000000000000000000000000001 )
b00000000000000000000000000001001 *
b00000000000000000000000000010001 +
b0000000000000000000000000000000000000000000000000000000000001001 ,
1.
b00000000000000000000000000000011 /
b00000000000000000000000000010001 0
#8
b0000000000000000000000000000000000000000000000000000000000001010 '
0.
#9
b00000000000000000000000000001001 %
b00000000000000000000000000001001 &
b0000000000000000000000000000000000000000000000000000000000001011 '
b00000000000000000000000000001001 +
b0000000000000000000000000000000000000000000000000000000000001100 ,
1.
b00000000000000000000000000000100 /
b00000000000000000000000000001001 0
#10
b0000000000000000000000000000000000000000000000000000000000001101 '
0.
#11
b0000000000000000000000000000000000000000000000000000000000001110 '
b0000000000000000000000000000000000000000000000000000000000001111 ,
1.
b00000000000000000000000000000101 /
